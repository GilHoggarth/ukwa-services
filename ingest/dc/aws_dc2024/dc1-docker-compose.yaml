# Reworked for DC kafka from
# https://medium.com/@tetianaokhotnik/docker-compose-for-kafka-single-broker-in-kraft-mode-kafka-ui-and-confluent-rest-proxy-7334da721d4c

version: "3"
services:
  broker:
    image: ${KAFKA_IMAGE}
    hostname: broker
    user: ${USER_ID}
    ulimits:
      nofile:
        soft: 102400
        hard: 204800
    ports:
      - "9092:9092"
      - "9094:9094"
    volumes:
      - ${KAFKA_PATH}:/bitnami/kafka

    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092,EXTERNAL://${CRAWL_HOST_LAN_IP}:9094
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
      # ukwa
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=false
      - KAFKA_CFG_NUM_PARTITIONS=32
      - KAFKA_HEAP_OPTS=-Xmx4g -Xms4g
      #- LOG_RETENTION_HOURS=-1
      #- LOG_RETENTION_BYTES=-1
      #- BITNAMI_DEBUG=no
      #- KAFKA_LOG4J_LOGGERs=kafka=DEBUG
      #- KAFKA_LOG_DIR=/bitnami/kafka/logs

  ui:
    image: ${KAFKA_UI_IMAGE}
    depends_on: 
      - broker
    ports:
      - 9000:8080
    environment:
      - KAFKA_CLUSTERS_0_NAME=dc-cluster
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=${CRAWL_HOST_LAN_IP}:9094
      - DYNAMIC_CONFIG_ENABLED=true
      - LOGGING_LEVEL_ROOT=warn


networks:
  default:
    driver: overlay
    # attachable allows external (outside of docker network) access to outside advertised listener
    attachable: true

