server {
    listen 80;
    proxy_read_timeout 600;

    # NGINX merging // to / routinely causes problems for us, so lets switch it off:
    merge_slashes off;

    # proxies -----------------------------------------------------------
    location /act/wayback {
            # Ensure this service authenticates against W3ACT
            auth_request /act/api/auth/ldl;
            error_page 401 = @error401ldl;

            # Always copy the (validated) W3ACT cookie into the response 
            # (avoiding it getting dropped when a lot of achived site cookies are generated by playback)
            # Also, since c. 2013, Chromium browsers support cookie priority settings, which should help
            # https://stackoverflow.com/questions/19792038/what-does-priority-high-mean-in-the-set-cookie-header
            add_header 'Set-Cookie' 'PLAY_SESSION=$cookie_PLAY_SESSION; Path=/act; SameSite=Strict; HttpOnly; Secure; Priority=High';

            # Catch old interface examples where there is no collection, just a star
            rewrite ^/act/wayback/\*(.*) /act/wayback/archive/$1 redirect;
            rewrite ^/act/wayback/([0-9]+.*) /act/wayback/archive/$1 redirect;

            # Rewrite so pywb understands:
            rewrite ^/act/wayback(.*) $1 break;

            # Include defaults:
            include uwsgi_params;

            uwsgi_param UWSGI_SCHEME $http_x_forwarded_proto;
            uwsgi_param HTTP_HOST $http_x_forwarded_host;
            uwsgi_param SCRIPT_NAME /act/wayback;

            uwsgi_pass pywb:8081;

            uwsgi_force_ranges on;
            uwsgi_buffer_size 64k;
            uwsgi_buffers 16 64k;
            uwsgi_busy_buffers_size 64k;
            uwsgi_request_buffering off;
            uwsgi_buffering off;
    }

    # Indicate how to login via ACT:
    location @error401 {
        default_type text/html;
        return 401 "<h1>401 Authorization Required</h1><p>You have to be <a href='/act/login' target='_top'>logged into W3ACT</a> to access this page.</p>";
    }
    location @error401ldl {
        default_type text/html;
        return 401 "<h1>401 Authorization Required</h1><p>You have to be <a href='/act/login' target='_top'>logged into W3ACT</a> and be a member of a Legal Deposit Library to access this page.</p>";
    }

    # Make crawl log viewer available
    location /act/logs {
        # Ensure this service authenticates against W3ACT
        auth_request /act/api/auth;
        error_page 401 = @error401;

        proxy_pass  http://crawl-log-viewer:8000/act/logs;
        proxy_redirect     off;
        proxy_read_timeout 300; # Allow a long timeout because Kafka can be slow when filtering long time period

        proxy_set_header   Host   $http_x_forwarded_host;
    }

    # Integrate SolrWayback
    location /act/solrwayback {
        # Ensure this service authenticates against W3ACT
        auth_request /act/api/auth;
        error_page 401 = @error401;

        proxy_pass  http://solrwayback:8080;
        proxy_set_header   Host   $http_x_forwarded_host;
    }

    # Integrate Blacklight Backstage:
    location /act/backstage {
        # Ensure this service authenticates against W3ACT
        auth_request /act/api/auth;
        error_page 401 = @error401;

        # To avoid NGINX decoding/merging slashes etc.
        if ($request_uri ~* "/act/backstage/(.*)$") {
           proxy_pass http://backstage:3000/act/backstage/$1;
        }
        proxy_pass http://backstage:3000;
        proxy_redirect     off;

        proxy_set_header   Host                 $http_host;
        proxy_set_header   X-Real-IP            $remote_addr;
        proxy_set_header   X-Forwarded-For      $proxy_add_x_forwarded_for;
        #proxy_set_header   X-Forwarded-Proto    $scheme;
        proxy_set_header   X-Forwarded-Proto    $http_x_forwarded_proto;

    }

    # Make notebook-based apps available:
    location /act/nbapps {
        # Ensure this service authenticates against W3ACT
        auth_request /act/api/auth;
        error_page 401 = @error401;

        proxy_pass http://nbapps:8866;
        proxy_redirect off;
        proxy_buffering off;
        proxy_read_timeout 86400;

        # Web Socket support:
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $http_x_forwarded_host;
    }

    # Make Grafana instance available
    location /act/grafana/ {
        proxy_pass http://grafana:3000;

        # Ensure this service authenticates against W3ACT
        auth_request /act/api/auth;
        auth_request_set $x_auth_remote_user_email $upstream_http_x_auth_remote_user_email;
        auth_request_set $x_auth_remote_user_primary_role $upstream_http_x_auth_remote_user_primary_role;
        error_page 401 = @error401;

        proxy_set_header X-Auth-Remote-User-Email $x_auth_remote_user_email;
        proxy_set_header X-Auth-Remote-User-Primary-Role $x_auth_remote_user_primary_role;
        proxy_set_header Authorization ""; # This seems to be needed for Grafana authentication to be happy!
    }
    location /act/grafana/api/live/ws {
        rewrite  ^/act/grafana/(.*)  /$1 break;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $http_host;
        proxy_pass http://grafana:3000;

        # Ensure this service authenticates against W3ACT
        auth_request /act/api/auth;
        auth_request_set $x_auth_remote_user_email $upstream_http_x_auth_remote_user_email;
        auth_request_set $x_auth_remote_user_primary_role $upstream_http_x_auth_remote_user_primary_role;
        error_page 401 = @error401;

        proxy_set_header X-Auth-Remote-User-Email $x_auth_remote_user_email;
        proxy_set_header X-Auth-Remote-User-Primary-Role $x_auth_remote_user_primary_role;
        proxy_set_header Authorization ""; # This seems to be needed for Grafana authentication to be happy!
    }

    # Define auth_request handling:
    location /act/api/auth {
        internal;
        proxy_pass http://w3act:9000;
        # These setting make sure auth sub-requests don't hang:
        proxy_pass_request_body off;
        proxy_set_header        Content-Length "";
    }

    # default action - always last ---------------
    location /act {
        proxy_http_version 1.1;
        proxy_pass http://w3act:9000/act;
    }

}
