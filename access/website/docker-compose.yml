# -------------------------------------------------------------
# This service configuration defines our main public website access stack.
# -------------------------------------------------------------

version: '3.2'

services:

  # -------------------------------------------------------------
  # Web proxy setup
  # -------------------------------------------------------------
  # All routing to sub-components goes through here.
  # All complex setup relating to the public website is here.
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./config/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - shine
      - pywb
      - ukwa-ui
      - api
      - mementos

  # -------------------------------------------------------------
  # The main UKWA UI itself
  # -------------------------------------------------------------
  ukwa-ui:
    image: ukwa/ukwa-ui:v1.3.4
    command: java -Djava.security.egd=file:/dev/./urandom -jar /ukwa-ui.war --spring.config.location=file:/application.properties
    environment:
     - "SET_PROTOCOL_TO_HTTPS=${USE_HTTPS}"
     - "OFF_SITE_URL=https://${SERVER_NAME}/wayback/archive/"
     - "SOLR_COLLECTION_SEARCH_PATH=http://collections_solr:8983"
     - "SOLR_COLLECTION_SEARCH_REQUEST_HANDLER=/solr/collections/select"
     - "SOLR_FULL_TEXT_SEARCH_PATH=${SOLR_FULL_TEXT_SEARCH_PATH}"
     - "SOLR_FULL_TEXT_SEARCH_REQUEST_HANDLER=/solr/all/select"
     - "SOLR_READ_TIMEOUT=600000"
     - "SOLR_CONNECTION_TIMEOUT=60000"
     - "SOLR_USERNAME="
     - "SOLR_PASSWORD="
     - "SOLR_SHOW_STUB_DATA_SERVICE_NOT_AVAILABLE=true"
     - "BL_SMTP_SERVER_HOST=juno.bl.uk"
     - "BL_SMTP_USERNAME="
     - "BL_SMTP_PASSWORD="
    volumes:
      - ./config/ukwa-ui/ukwa-ui.properties:/application.properties:ro
    networks:
      - default
      - access_data_default

  # -------------------------------------------------------------
  # OA Wayback configuration:
  # -------------------------------------------------------------
  pywb:
    image: ukwa/ukwa-pywb:2.4.0-beta
    environment:
      - "DEBUG=True"
      - "WEBHDFS_USER=access"
      - "UKWA_INDEX=${UKWA_INDEX}"
      - "UKWA_ARCHIVE=${UKWA_ARCHIVE}"
    volumes:
      - ./config/pywb/config.yaml:/webarchive/config.yaml
      # Used to store the access control lists used by the pywb services.
      - open_access_acls:/ukwa_pywb/acl/


  # An embedded, bannerless OA Wayback to render screenshots:
  pywb-nobanner:
    image: ukwa/ukwa-pywb:2.4.0-beta
    environment:
      - "DEBUG=True"
      - "WEBHDFS_USER=access"
      - "UKWA_INDEX=${UKWA_INDEX}"
      - "UKWA_ARCHIVE=${UKWA_ARCHIVE}"
    volumes:
      - ./config/pywb/config-nobanner.yaml:/webarchive/config.yaml
      - ./config/pywb/empty-banner.js:/ukwa_pywb/static/default_banner.js
      - open_access_acls:/ukwa_pywb/acl/

  # -------------------------------------------------------------
  # Mementos
  # -------------------------------------------------------------
  mementos:
    image: ukwa/mementoweb-webclient
    command: "/mementos/bin/mementos-webclient -Dhttp.proxyHost=${PROXYHOST} -Dhttp.proxyPort=${PROXYPORT} -Dconfig.file=/mementos/conf/application.conf -Dpidfile.path=/dev/null"
    environment:
      - "JAVA_OPTS=-Xmx1g -Dhttp.proxyHost=${PROXYHOST} -Dhttp.proxyPort=${PROXYPORT}"

  # -------------------------------------------------------------
  # Shine service and database
  # -------------------------------------------------------------
  # Shine
  shine:
   image: ukwa/shine
   environment:
     - "SOLR_URL=${SHINE_SOLR}"
     - "JAVA_OPTS=-Xmx2g -XX:+ExitOnOutOfMemoryError"
   depends_on:
     - shinedb

  # Shine state
  shinedb:
    image: postgres:9.6.2
    volumes:
      # Used to store the Shine PostgreSQL database (which hold user accounts).
      - "${STORAGE_PATH}/shine-postgres-data:/var/lib/postgresql/data"
      
      
  # -------------------------------------------------------------
  # The Python service that provides some basic APIs
  # -------------------------------------------------------------
  api:
    image: ukwa/ukwa-access-api
    environment:
      - "CDX_SERVER=${CDX_SERVER}"
      - "WEBHDFS_PREFIX=http://hdfs.api.wa.bl.uk/webhdfs/v1"
      - "KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BROKER}"
      - "KAFKA_CRAWLED_TOPIC=fc.crawled"
      - "KAFKA_SEEK_TO_BEGINNING=False"
      - "API_LABEL=UK Web Archive API"
      - "KAFKA_LAUNCH_BROKER=${KAFKA_BROKER}"
      - "KAFKA_LAUNCH_TOPIC=fc.tocrawl.npld"
      - "HTTPS_PROXY=http://194.66.232.92:3127/"
      - "SERVER_NAME=${SERVER_NAME}"
      - "ANALYSIS_SOURCE_FILE=/analysis/fc.crawled.json"
      - "SCRIPT_NAME=/api" # Deploy the API under this prefix
      - "HTTP_X_FORWARDED_PROTO=https"
      - "WEBRENDER_ARCHIVE_SERVER=http://webrender:8010/render"
    volumes:
      - "analysis_volume:/analysis"
    depends_on:
      - webrender

  # Web page rendering post-crawl:
  webrender:
    image: ukwa/webrender-api:1.0.14
    environment:
      - "HTTP_PROXY=http://pywb-nobanner:8080"
      - "DOCKER_NETWORK=access_website_default"
      - "LC_ALL=en_US.utf8"
      - "WEB_RENDER_TMP=${WEB_RENDER_TMP}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      # Current implementation means this has to be a disk mount that has the same path as on host:
      - ${WEB_RENDER_TMP}:${WEB_RENDER_TMP}
    depends_on:
      - pywb-nobanner
    deploy:
      replicas: 1
  

# -----------------------------------------
# Volumes and networks supporting the above
# -----------------------------------------
volumes:
  # Used to store analysis generated from Kafka, so it can be made available via the API component.
  # Only transient storage so can be managed entirely by Docker.
  analysis_volume:
    external:
      name: access_data_fc_analysis

  # Used to store the open access control lists
  open_access_acls:
    external:
      name: access_data_w3act_export

networks:
  # This attachable network is needed so the screenshotter can spin up containers and talk to them over HTTP.
  # It also makes it simpler to connect to the PostgreSQL instance for maintenance.
  default:
    driver: overlay
    attachable: true
  access_data_default:
    external: true

